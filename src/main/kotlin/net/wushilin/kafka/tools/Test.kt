package net.wushilin.kafka.tools

import java.nio.charset.StandardCharsets

fun main(args:Array<String>) {


    val str = "34, 123, 92, 110, 32, 32, 92, 34, 111, 119, 110, 101, 114, 73, 100, 92, 34, 58, 32, 54, 48, 56, 44, 92, 110, 32, 32, 92, 34, 112, 114, 101, 115, 101, 110, 116, 77, 111, 98, 105, 108, 101, 78, 117, 109, 98, 101, 114, 49, 92, 34, 58, 32, 92, 34, 53, 53, 50, 50, 57, 54, 50, 50, 50, 51, 92, 34, 44, 92, 110, 32, 32, 92, 34, 109, 97, 114, 105, 116, 97, 108, 83, 116, 97, 116, 117, 115, 73, 100, 92, 34, 58, 32, 92, 34, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 99, 114, 101, 97, 116, 101, 100, 68, 97, 116, 101, 92, 34, 58, 32, 92, 34, 50, 48, 49, 56, 45, 48, 57, 45, 48, 49, 84, 48, 56, 58, 52, 50, 58, 48, 56, 46, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 114, 97, 116, 105, 110, 103, 73, 100, 92, 34, 58, 32, 49, 44, 92, 110, 32, 32, 92, 34, 98, 105, 114, 116, 104, 68, 97, 116, 101, 92, 34, 58, 32, 92, 34, 50, 48, 48, 48, 45, 49, 48, 45, 49, 55, 84, 49, 54, 58, 48, 48, 58, 48, 48, 46, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 117, 112, 100, 97, 116, 101, 100, 68, 97, 116, 101, 92, 34, 58, 32, 92, 34, 50, 48, 50, 51, 45, 48, 49, 45, 49, 49, 84, 48, 53, 58, 49, 52, 58, 50, 50, 46, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 101, 109, 97, 105, 108, 65, 100, 100, 114, 101, 115, 115, 92, 34, 58, 32, 92, 34, 115, 98, 99, 57, 52, 48, 50, 64, 103, 46, 99, 111, 109, 92, 34, 44, 92, 110, 32, 32, 92, 34, 99, 117, 115, 116, 111, 109, 101, 114, 78, 97, 109, 101, 92, 34, 58, 32, 92, 34, 74, 101, 114, 101, 109, 121, 32, 84, 101, 115, 116, 115, 32, 48, 48, 48, 51, 92, 34, 44, 92, 110, 32, 32, 92, 34, 112, 114, 101, 115, 101, 110, 116, 84, 101, 108, 101, 112, 104, 111, 110, 101, 78, 117, 109, 98, 101, 114, 49, 92, 34, 58, 32, 92, 34, 51, 54, 56, 54, 49, 52, 50, 55, 92, 34, 44, 92, 110, 32, 32, 92, 34, 99, 117, 115, 116, 111, 109, 101, 114, 83, 116, 97, 116, 117, 115, 67, 111, 100, 101, 92, 34, 58, 32, 50, 55, 44, 92, 110, 32, 32, 92, 34, 97, 99, 99, 111, 117, 110, 116, 73, 100, 92, 34, 58, 32, 49, 52, 50, 52, 52, 44, 92, 110, 32, 32, 92, 34, 99, 117, 115, 116, 111, 109, 101, 114, 66, 101, 116, 116, 101, 114, 66, 97, 110, 107, 105, 110, 103, 78, 117, 109, 98, 101, 114, 92, 34, 58, 32, 92, 34, 49, 48, 49, 48, 54, 57, 53, 55, 56, 48, 50, 92, 34, 44, 92, 110, 32, 32, 92, 34, 102, 97, 120, 92, 34, 58, 32, 92, 34, 49, 50, 52, 54, 50, 54, 92, 34, 44, 92, 110, 32, 32, 92, 34, 83, 89, 83, 84, 69, 77, 78, 65, 77, 69, 92, 34, 58, 32, 92, 34, 67, 82, 77, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 69, 78, 84, 84, 89, 80, 92, 34, 58, 32, 92, 34, 82, 82, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 67, 67, 73, 68, 92, 34, 58, 32, 92, 34, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 67, 79, 77, 77, 73, 84, 95, 84, 73, 77, 69, 83, 84, 65, 77, 80, 92, 34, 58, 32, 92, 34, 50, 48, 50, 51, 45, 48, 54, 45, 50, 49, 32, 50, 49, 58, 52, 56, 58, 53, 54, 46, 50, 55, 52, 48, 48, 48, 48, 48, 48, 48, 48, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 76, 73, 66, 82, 65, 82, 89, 92, 34, 58, 32, 92, 34, 83, 69, 67, 85, 82, 73, 84, 73, 69, 83, 95, 66, 65, 78, 75, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 79, 66, 74, 69, 67, 84, 92, 34, 58, 32, 92, 34, 65, 67, 67, 79, 85, 78, 84, 83, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 80, 82, 79, 71, 82, 65, 77, 92, 34, 58, 32, 92, 34, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 74, 79, 66, 92, 34, 58, 32, 92, 34, 84, 83, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 74, 79, 66, 78, 79, 92, 34, 58, 32, 92, 34, 48, 48, 48, 48, 48, 48, 92, 34, 44, 92, 110, 32, 32, 92, 34, 65, 95, 74, 79, 66, 85, 83, 69, 82, 92, 34, 58, 32, 92, 34, 84, 83, 92, 34, 92, 110, 125, 34"
    var bytes = str.split(",").map {
        it.trim()
    }.filter {
        it.isNotEmpty()
    }.map {
        it.toInt().toByte()
    }.toByteArray()
    println(String(bytes, StandardCharsets.UTF_8))
}
